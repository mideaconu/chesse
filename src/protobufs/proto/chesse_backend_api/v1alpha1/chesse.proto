syntax = "proto3";
package chesse_backend_api.v1alpha1;

import "chesse_backend_api/v1alpha1/games.proto";
import "chesse_backend_api/v1alpha1/positions.proto";


// CheSSE Backend Service.
service CheSSEBackendService {
    // Fetch a chess position.
    rpc GetChessPosition(GetChessPositionRequest) returns (GetChessPositionResponse);
    // Fetch a list of chess positions.
    rpc GetChessPositions(GetChessPositionsRequest) returns (GetChessPositionsResponse);

    // Fetch a chess game.
    rpc GetChessGame(GetChessGameRequest) returns (GetChessGameResponse);
    // Fetch a list of chess games.
    rpc GetChessGames(GetChessGamesRequest) returns (GetChessGamesResponse);
}

// Request to fetch a chess position
message GetChessPositionRequest {
    // Forsyth–Edwards Notation (FEN) encoding of the position. Example:
    // rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR.
    string fen_encoding = 1;
}

// Response to fetch a chess position
message GetChessPositionResponse {
    // The chess position.
    chesse_backend_api.v1alpha1.Position position = 1;
}

// Request to fetch a list of chess positions
message GetChessPositionsRequest {
    // Forsyth–Edwards Notation (FEN) encoding of the position to be compared 
    // to. Example: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR. The positions 
    // that are most similar to this position are returned, in order of 
    // similarity.
    string fen_encoding = 1;
}

// Response to fetch a list of chess positions
message GetChessPositionsResponse {
    // The chess positions.
    repeated chesse_backend_api.v1alpha1.Position positions = 1;
}

// Request to fetch a chess game
message GetChessGameRequest {
    // The chess game ID.
    string game_id = 1;
}

// Response to fetch chess game
message GetChessGameResponse {
    // The chess game.
    chesse_backend_api.v1alpha1.Game game = 1;
}

// Request to fetch a list of chess games
message GetChessGamesRequest {
    // Forsyth–Edwards Notation (FEN) encoding of the position. Example:
    // rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR.
    string fen_encoding = 1;
}

// Response to fetch a list of chess games
message GetChessGamesResponse {
    // The chess games.
    repeated chesse_backend_api.v1alpha1.Game games = 1;
}
