# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from chesse_backend_api.v1alpha1 import (
    chesse_pb2 as chesse__backend__api_dot_v1alpha1_dot_chesse__pb2,
)


class CheSSEBackendServiceStub(object):
    """CheSSE Backend Service."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChessPosition = channel.unary_unary(
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessPosition",
            request_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionRequest.SerializeToString,
            response_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionResponse.FromString,
        )
        self.GetChessPositions = channel.unary_unary(
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessPositions",
            request_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionsRequest.SerializeToString,
            response_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionsResponse.FromString,
        )
        self.GetChessGame = channel.unary_unary(
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessGame",
            request_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGameRequest.SerializeToString,
            response_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGameResponse.FromString,
        )
        self.GetChessGames = channel.unary_unary(
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessGames",
            request_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGamesRequest.SerializeToString,
            response_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGamesResponse.FromString,
        )


class CheSSEBackendServiceServicer(object):
    """CheSSE Backend Service."""

    def GetChessPosition(self, request, context):
        """Fetch a chess position."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetChessPositions(self, request, context):
        """Fetch a list of chess positions."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetChessGame(self, request, context):
        """Fetch a chess game."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetChessGames(self, request, context):
        """Fetch a list of chess games."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CheSSEBackendServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetChessPosition": grpc.unary_unary_rpc_method_handler(
            servicer.GetChessPosition,
            request_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionRequest.FromString,
            response_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionResponse.SerializeToString,
        ),
        "GetChessPositions": grpc.unary_unary_rpc_method_handler(
            servicer.GetChessPositions,
            request_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionsRequest.FromString,
            response_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionsResponse.SerializeToString,
        ),
        "GetChessGame": grpc.unary_unary_rpc_method_handler(
            servicer.GetChessGame,
            request_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGameRequest.FromString,
            response_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGameResponse.SerializeToString,
        ),
        "GetChessGames": grpc.unary_unary_rpc_method_handler(
            servicer.GetChessGames,
            request_deserializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGamesRequest.FromString,
            response_serializer=chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGamesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "chesse_backend_api.v1alpha1.CheSSEBackendService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CheSSEBackendService(object):
    """CheSSE Backend Service."""

    @staticmethod
    def GetChessPosition(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessPosition",
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionRequest.SerializeToString,
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetChessPositions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessPositions",
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionsRequest.SerializeToString,
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessPositionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetChessGame(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessGame",
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGameRequest.SerializeToString,
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetChessGames(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chesse_backend_api.v1alpha1.CheSSEBackendService/GetChessGames",
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGamesRequest.SerializeToString,
            chesse__backend__api_dot_v1alpha1_dot_chesse__pb2.GetChessGamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
