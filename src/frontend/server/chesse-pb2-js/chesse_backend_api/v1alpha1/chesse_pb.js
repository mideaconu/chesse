// source: chesse_backend_api/v1alpha1/chesse.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var chesse_backend_api_v1alpha1_games_pb = require('../../chesse_backend_api/v1alpha1/games_pb.js');
goog.object.extend(proto, chesse_backend_api_v1alpha1_games_pb);
var chesse_backend_api_v1alpha1_positions_pb = require('../../chesse_backend_api/v1alpha1/positions_pb.js');
goog.object.extend(proto, chesse_backend_api_v1alpha1_positions_pb);
goog.exportSymbol('proto.chesse_backend_api.v1alpha1.GetGameRequest', null, global);
goog.exportSymbol('proto.chesse_backend_api.v1alpha1.GetGameResponse', null, global);
goog.exportSymbol('proto.chesse_backend_api.v1alpha1.GetGamesRequest', null, global);
goog.exportSymbol('proto.chesse_backend_api.v1alpha1.GetGamesResponse', null, global);
goog.exportSymbol('proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest', null, global);
goog.exportSymbol('proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.displayName = 'proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.repeatedFields_, null);
};
goog.inherits(proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.displayName = 'proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chesse_backend_api.v1alpha1.GetGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chesse_backend_api.v1alpha1.GetGameRequest.displayName = 'proto.chesse_backend_api.v1alpha1.GetGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chesse_backend_api.v1alpha1.GetGameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chesse_backend_api.v1alpha1.GetGameResponse.displayName = 'proto.chesse_backend_api.v1alpha1.GetGameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chesse_backend_api.v1alpha1.GetGamesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chesse_backend_api.v1alpha1.GetGamesRequest.displayName = 'proto.chesse_backend_api.v1alpha1.GetGamesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chesse_backend_api.v1alpha1.GetGamesResponse.repeatedFields_, null);
};
goog.inherits(proto.chesse_backend_api.v1alpha1.GetGamesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chesse_backend_api.v1alpha1.GetGamesResponse.displayName = 'proto.chesse_backend_api.v1alpha1.GetGamesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && chesse_backend_api_v1alpha1_positions_pb.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest;
  return proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chesse_backend_api_v1alpha1_positions_pb.Position;
      reader.readMessage(value,chesse_backend_api_v1alpha1_positions_pb.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chesse_backend_api_v1alpha1_positions_pb.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position position = 1;
 * @return {?proto.chesse_backend_api.v1alpha1.Position}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.prototype.getPosition = function() {
  return /** @type{?proto.chesse_backend_api.v1alpha1.Position} */ (
    jspb.Message.getWrapperField(this, chesse_backend_api_v1alpha1_positions_pb.Position, 1));
};


/**
 * @param {?proto.chesse_backend_api.v1alpha1.Position|undefined} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest} returns this
*/
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest} returns this
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsRequest.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    similarPositionsList: jspb.Message.toObjectList(msg.getSimilarPositionsList(),
    chesse_backend_api_v1alpha1_positions_pb.SimilarPosition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse;
  return proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chesse_backend_api_v1alpha1_positions_pb.SimilarPosition;
      reader.readMessage(value,chesse_backend_api_v1alpha1_positions_pb.SimilarPosition.deserializeBinaryFromReader);
      msg.addSimilarPositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSimilarPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      chesse_backend_api_v1alpha1_positions_pb.SimilarPosition.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SimilarPosition similar_positions = 1;
 * @return {!Array<!proto.chesse_backend_api.v1alpha1.SimilarPosition>}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.prototype.getSimilarPositionsList = function() {
  return /** @type{!Array<!proto.chesse_backend_api.v1alpha1.SimilarPosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, chesse_backend_api_v1alpha1_positions_pb.SimilarPosition, 1));
};


/**
 * @param {!Array<!proto.chesse_backend_api.v1alpha1.SimilarPosition>} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse} returns this
*/
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.prototype.setSimilarPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chesse_backend_api.v1alpha1.SimilarPosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chesse_backend_api.v1alpha1.SimilarPosition}
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.prototype.addSimilarPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chesse_backend_api.v1alpha1.SimilarPosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse} returns this
 */
proto.chesse_backend_api.v1alpha1.GetSimilarPositionsResponse.prototype.clearSimilarPositionsList = function() {
  return this.setSimilarPositionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.chesse_backend_api.v1alpha1.GetGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chesse_backend_api.v1alpha1.GetGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameRequest}
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chesse_backend_api.v1alpha1.GetGameRequest;
  return proto.chesse_backend_api.v1alpha1.GetGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameRequest}
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chesse_backend_api.v1alpha1.GetGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string game_id = 1;
 * @return {string}
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameRequest} returns this
 */
proto.chesse_backend_api.v1alpha1.GetGameRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.chesse_backend_api.v1alpha1.GetGameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chesse_backend_api.v1alpha1.GetGameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    game: (f = msg.getGame()) && chesse_backend_api_v1alpha1_games_pb.Game.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameResponse}
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chesse_backend_api.v1alpha1.GetGameResponse;
  return proto.chesse_backend_api.v1alpha1.GetGameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameResponse}
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chesse_backend_api_v1alpha1_games_pb.Game;
      reader.readMessage(value,chesse_backend_api_v1alpha1_games_pb.Game.deserializeBinaryFromReader);
      msg.setGame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chesse_backend_api.v1alpha1.GetGameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chesse_backend_api_v1alpha1_games_pb.Game.serializeBinaryToWriter
    );
  }
};


/**
 * optional Game game = 1;
 * @return {?proto.chesse_backend_api.v1alpha1.Game}
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.prototype.getGame = function() {
  return /** @type{?proto.chesse_backend_api.v1alpha1.Game} */ (
    jspb.Message.getWrapperField(this, chesse_backend_api_v1alpha1_games_pb.Game, 1));
};


/**
 * @param {?proto.chesse_backend_api.v1alpha1.Game|undefined} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameResponse} returns this
*/
proto.chesse_backend_api.v1alpha1.GetGameResponse.prototype.setGame = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGameResponse} returns this
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.prototype.clearGame = function() {
  return this.setGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chesse_backend_api.v1alpha1.GetGameResponse.prototype.hasGame = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.chesse_backend_api.v1alpha1.GetGamesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chesse_backend_api.v1alpha1.GetGamesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && chesse_backend_api_v1alpha1_positions_pb.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesRequest}
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chesse_backend_api.v1alpha1.GetGamesRequest;
  return proto.chesse_backend_api.v1alpha1.GetGamesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGamesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesRequest}
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chesse_backend_api_v1alpha1_positions_pb.Position;
      reader.readMessage(value,chesse_backend_api_v1alpha1_positions_pb.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chesse_backend_api.v1alpha1.GetGamesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGamesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chesse_backend_api_v1alpha1_positions_pb.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position position = 1;
 * @return {?proto.chesse_backend_api.v1alpha1.Position}
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.prototype.getPosition = function() {
  return /** @type{?proto.chesse_backend_api.v1alpha1.Position} */ (
    jspb.Message.getWrapperField(this, chesse_backend_api_v1alpha1_positions_pb.Position, 1));
};


/**
 * @param {?proto.chesse_backend_api.v1alpha1.Position|undefined} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesRequest} returns this
*/
proto.chesse_backend_api.v1alpha1.GetGamesRequest.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesRequest} returns this
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chesse_backend_api.v1alpha1.GetGamesRequest.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.chesse_backend_api.v1alpha1.GetGamesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesList: jspb.Message.toObjectList(msg.getGamesList(),
    chesse_backend_api_v1alpha1_games_pb.Game.toObject, includeInstance),
    stats: (f = msg.getStats()) && chesse_backend_api_v1alpha1_positions_pb.PositionStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesResponse}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chesse_backend_api.v1alpha1.GetGamesResponse;
  return proto.chesse_backend_api.v1alpha1.GetGamesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesResponse}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chesse_backend_api_v1alpha1_games_pb.Game;
      reader.readMessage(value,chesse_backend_api_v1alpha1_games_pb.Game.deserializeBinaryFromReader);
      msg.addGames(value);
      break;
    case 2:
      var value = new chesse_backend_api_v1alpha1_positions_pb.PositionStats;
      reader.readMessage(value,chesse_backend_api_v1alpha1_positions_pb.PositionStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chesse_backend_api.v1alpha1.GetGamesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      chesse_backend_api_v1alpha1_games_pb.Game.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chesse_backend_api_v1alpha1_positions_pb.PositionStats.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Game games = 1;
 * @return {!Array<!proto.chesse_backend_api.v1alpha1.Game>}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.getGamesList = function() {
  return /** @type{!Array<!proto.chesse_backend_api.v1alpha1.Game>} */ (
    jspb.Message.getRepeatedWrapperField(this, chesse_backend_api_v1alpha1_games_pb.Game, 1));
};


/**
 * @param {!Array<!proto.chesse_backend_api.v1alpha1.Game>} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} returns this
*/
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.setGamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chesse_backend_api.v1alpha1.Game=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chesse_backend_api.v1alpha1.Game}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.addGames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chesse_backend_api.v1alpha1.Game, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} returns this
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.clearGamesList = function() {
  return this.setGamesList([]);
};


/**
 * optional PositionStats stats = 2;
 * @return {?proto.chesse_backend_api.v1alpha1.PositionStats}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.getStats = function() {
  return /** @type{?proto.chesse_backend_api.v1alpha1.PositionStats} */ (
    jspb.Message.getWrapperField(this, chesse_backend_api_v1alpha1_positions_pb.PositionStats, 2));
};


/**
 * @param {?proto.chesse_backend_api.v1alpha1.PositionStats|undefined} value
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} returns this
*/
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chesse_backend_api.v1alpha1.GetGamesResponse} returns this
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chesse_backend_api.v1alpha1.GetGamesResponse.prototype.hasStats = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.chesse_backend_api.v1alpha1);
